version: '3.8'

networks:
  real-estate-network:
    external: true

services:
  real-estate-frontend:
    image: real-estate-frontend:latest
    container_name: real-estate-frontend
#    ports:
#      - "3000:3000"
    environment:
      API_URL: http://real-estate-backend:8080
    depends_on:
      - real-estate-backend
    networks:
      - real-estate-network



  real-estate-backend:
    image: real-estate-backend:latest
    container_name: real-estate-backend
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://${DB_HOST}:${DB_PORT}/${DB_NAME}
      - SPRING_DATASOURCE_USERNAME=${DB_USER}
      - SPRING_DATASOURCE_PASSWORD=${DB_PASSWORD}
      - APPLICATION_SECURITY_JWT_SECRET=${JWT_SECRET}
      - SPRING_KAFKA_BOOTSTRAP-SERVERS=real-estate-kafka
      - SPRING_PROFILES_ACTIVE=${ACTIVE_ENVIRONMENT}
      - PHOTO_UPLOAD_DIR={PHOTO_UPLOADS_DIR}
    volumes:
      - backend_uploads:/app/uploads
    depends_on:
      - real-estate-postgres
      - real-estate-kafka
    networks:
      - real-estate-network


  real-estate-mailing-service:
    image: real-estate-mailing-service:latest
    container_name: real-estate-mailing-service
    environment:
      - SPRING_KAFKA_BOOTSTRAP-SERVERS=real-estate-kafka
    depends_on:
      - real-estate-kafka
    networks:
      - real-estate-network


  real-estate-postgres:
    image: postgres:13
    container_name: real-estate-postgres
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - real-estate-network


  real-estate-kafka:
    image: apache/kafka:3.7.1
    container_name: real-estate-kafka
    networks:
      - real-estate-network
    expose:
      - "9092"


  real-estate-nginx:
    image: nginx:latest
    container_name: real-estate-nginx
    ports:
      - "80:80"
    depends_on:
      - real-estate-frontend
      - real-estate-backend
    volumes:
      - ./nginx/real_estate.conf:/etc/nginx/conf.d/default.conf
    networks:
      - real-estate-network

volumes:
  postgres_data:
  backend_uploads:
